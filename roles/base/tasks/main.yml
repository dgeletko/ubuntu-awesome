---

- name: add additional apt repos
  vars:
    keyring: /usr/share/keyrings
  block:
    - name: add apt repo key
      ansible.builtin.get_url:
        url: '{{item.key.url}}'
        dest: '{{keyring}}/{{item.key.dest}}'
      loop: '{{apt_repos}}'
      loop_control:
        label: '{{item.name}}'
      when: repos[item.name] | bool

    - name: add apt repo
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64 signed-by={{keyring}}/{{item.key.dest}}] {{item.repo}}
        state: present
        filename: '{{item.name}}'
      loop: '{{apt_repos}}'
      loop_control:
        label: '{{item.name}}'
      when: repos[item.name] | bool

    - name: set mozilla repo priority
      ansible.builtin.copy:
        src: files/etc/apt/preferences.d/mozilla
        dest: /etc/apt/preferences.d
        mode: 0644
      when: repos.mozilla | bool

- name: update apt cache
  ansible.builtin.apt:
    update_cache: true

- name: include ubuntu {{ansible_facts['distribution_version']}} vars
  ansible.builtin.include_vars: ubuntu_{{ansible_facts['distribution_major_version']}}.yml

- name: install standard ubuntu desktop base system packages
  ansible.builtin.apt:
    state: present
    name: '{{pkgs_desktop_base}}'

- name: install awesome window manager
  ansible.builtin.import_tasks: awesome.yml
  when: window_managers.awesome | bool

- name: install qtile window manager
  ansible.builtin.import_tasks: qtile.yml
  when: window_managers.qtile | bool

- name: install login manager
  block:
    - name: install login manager
      ansible.builtin.apt:
        state: present
        name:
          - lightdm
          - lightdm-settings
          - light-locker
          - light-locker-settings
          - slick-greeter
      notify: restart lightdm

    - name: configure greeter
      ansible.builtin.template:
        src: templates/etc/lightdm/slick-greeter.conf.j2
        dest: /etc/lightdm/slick-greeter.conf
        mode: 0644

- name: install base desktop packages
  ansible.builtin.apt:
    state: present
    name: '{{pkgs_desktop | flatten | select}}'

- name: install theme packages
  ansible.builtin.apt:
    state: present
    name:
      - '{{theme.style.pkg}}'
      - '{{theme.icon.pkg}}'
      - '{{theme.font.pkg}}'
      - gtk2-engines
      #- qt5ct
      #- qt5-gtk-platformtheme
      #- qt5-gtk2-platformtheme
      #- qt5-style-plugins
      #- qt6-gtk-platformtheme
      - ubuntu-wallpapers

- name: configure theme
  become_user: '{{user}}'
  block:
    - name: configure gtk2 theme
      ansible.builtin.template:
        src: templates/home/gtkrc-2.0.j2
        dest: ~/.gtkrc-2.0
        mode: 0644

    - name: create gtk3 config directory
      ansible.builtin.file:
        path: ~/.config/gtk-3.0
        state: directory

    - name: configure gtk3 theme
      ansible.builtin.template:
        src: templates/home/config/gtk-3.0/settings.ini.j2
        dest: ~/.config/gtk-3.0/settings.ini
        mode: 0644

- name: add flatpak support
  block:
    - name: install flatpak
      ansible.builtin.apt:
        state: present
        name:
          - flatpak
          - flatpak-xdg-utils

    - name: add flatpak flathub repo
      community.general.flatpak_remote:
        name: flathub
        state: present
        flatpakrepo_url: https://flathub.org/repo/flathub.flatpakrepo
  when: repos.flatpak | bool

- name: create xdg user dirs
  become_user: '{{user}}'
  ansible.builtin.command: 'xdg-user-dirs-update'
  args:
    creates: '~/Desktop'

