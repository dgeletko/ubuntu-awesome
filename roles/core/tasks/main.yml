---

- name: remove server packages
  ansible.builtin.apt:
    update_cache: true
    state: absent
    purge: true
    autoremove: true
    name:
      - snap
      - snapd
      - ubuntu-server
      - ubuntu-server-minimal

- name: remove server files
  ansible.builtin.file:
    path: '{{item}}'
    state: absent
  loop:
    - /etc/byobu
    - /etc/cloud
    - /etc/pollinate
    - /etc/vmware-tools

- name: install updates
  ansible.builtin.apt:
    update_cache: true
    upgrade: dist
    autoremove: true

- name: install core packages
  ansible.builtin.apt:
    state: present
    name:
      - cifs-utils
      - cpufrequtils
      - cryptsetup
      - cryptsetup-initramfs
      - dkms
      - ethtool
      - git
      - htop
      - hwdata
      - inxi
      - lvm2
      - net-tools
      - p7zip-full
      - pipx
      - python3-pip
      - python3-setuptools
      - python3-venv
      - python3-wheel
      - shim-signed
      - squashfs-tools
      - sysstat
      - tlp
      - tmux
      - ubuntu-standard
      - vim
      - zerofree

- name: install minimal desktop packages
  ansible.builtin.apt:
    state: present
    name:
      # depends
      - alsa-base
      - alsa-utils
      - anacron
      - bc
      - ca-certificates
      - dmz-cursor-theme
      - fontconfig
      - fonts-dejavu-core
      - fonts-freefont-ttf
      - ghostscript-x
      - gstreamer1.0-alsa
      - gstreamer1.0-plugins-base-apps
      - gstreamer1.0-pulseaudio
      - inputattach
      - libnotify-bin
      - libu2f-udev
      - pulseaudio
      - rfkill
      - ubuntu-drivers-common
      - unzip
      - wireless-tools
      - wpasupplicant
      - xdg-user-dirs
      - xdg-user-dirs-gtk
      - xorg
      - xterm
      - zenity
      - zip
      # recommends
      - acpi-support
      - bluez
      - cups
      - dirmngr
      - fonts-ubuntu
      - fwupd
      - fwupd-signed
      - gamemode
      - gnome-keyring
      - gpg-agent
      - gvfs-fuse
      - kerneloops
      - laptop-detect
      - libglib2.0-bin
      - libpam-fprintd
      - libpam-gnome-keyring
      - libpam-sss
      - network-manager
      - policykit-desktop-privileges
      - pulseaudio-module-bluetooth
      - xcursor-themes
      - xdg-desktop-portal-gtk
      - xdg-utils
      # other
      - acl
      - accountsservice
      - dconf-cli
      - gvfs-backends
      - language-pack-en
      - switcheroo-control
      #- ubuntu-restricted-addons # necessary? just install codecs as needed
      - unattended-upgrades

- name: install plymouth boot splash
  ansible.builtin.apt:
    state: present
    name:
      - plymouth
      - plymouth-theme-ubuntu-logo
      - plymouth-theme-ubuntu-text
      - plymouth-theme-spinner
  notify: update initramfs

- name: enable quiet splash in grub
  block:
    - name: find quiet splash in grub cmdline
      ansible.builtin.command: grep -E '^\s*GRUB_CMDLINE_LINUX(_DEFAULT)?\s*=\s*\".*quiet splash.*"' /etc/default/grub
      register: grub_quiet_splash
      ignore_errors: true
      failed_when: grub_quiet_splash.rc >= 2
      changed_when: false

    - name: add quiet splash in grub
      ansible.builtin.lineinfile:
        name: /etc/default/grub
        regexp: '^\s*GRUB_CMDLINE_LINUX_DEFAULT\s*=\s*"(.*)"'
        line: 'GRUB_CMDLINE_LINUX_DEFAULT="quiet splash \1"'
        backrefs: true
        state: present
      when: grub_quiet_splash.rc == 1
      notify: update grub

- name: set timezone
  community.general.timezone:
    name: America/New_York

- name: configure network manager as netplan renderer
  block:
    - name: remove installer netplan config
      ansible.builtin.file:
        path: '{{item}}'
        state: absent
      with_fileglob:
        - /etc/netplan/*.yaml
      when: item | basename != '01-network-manager-all.yaml'

    - name: copy network manager netplan config
      ansible.builtin.copy:
        src: files/etc/netplan/01-network-manager-all.yaml
        dest: /etc/netplan
        mode: 0644

    - name: disable systemd network daemon
      ansible.builtin.systemd:
        name: systemd-networkd
        enabled: false

- name: add i386 multiarch support
  block:
    - name: get current foreign architectures
      ansible.builtin.command: 'dpkg --print-foreign-architectures'
      register: dpkg_foreign_archs
      changed_when: false

    - debug: msg="{{dpkg_foreign_archs.stdout}}"

    - name: add i386 architecture
      ansible.builtin.command: 'dpkg --add-architecture i386'
      when: "'i386' not in dpkg_foreign_archs.stdout"
      register: dpkg_add_arch

    - name: update apt cache
      ansible.builtin.apt:
        update_cache: true
      when: dpkg_add_arch.changed

- name: create xdg user dirs
  become_user: '{{user}}'
  ansible.builtin.command: 'xdg-user-dirs-update'
  args:
    creates: '~/Desktop'

