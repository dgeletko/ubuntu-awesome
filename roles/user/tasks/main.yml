---

- name: add additional apt repos
  vars:
    keyring: /usr/share/keyrings
  block:
    - name: add repo key
      ansible.builtin.get_url:
        url: '{{item.key.url}}'
        dest: '{{keyring}}/{{item.key.dest}}'
      loop: '{{repos}}'
      loop_control:
        label: '{{item.name}}'

    - name: add repo
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64 signed-by={{keyring}}/{{item.key.dest}}] {{item.repo}}
        state: present
        filename: '{{item.name}}'
      loop: '{{repos}}'
      loop_control:
        label: '{{item.name}}'

- name: allow wireshark to run non-root # must be set prior to installing package
  ansible.builtin.debconf:
    name: wireshark-common
    question: wireshark-common/install-setuid
    value: 'true'
    vtype: select

- name: install core dev tools
  ansible.builtin.apt:
    state: present
    name:
      - ansible
      - build-essential
      - cmake
      - code
      - cppcheck
      - curl
      - docker.io
      - docker-buildx
      - docker-compose-v2
      - dos2unix
      - gdb-multiarch
      - git
      - git-completion
      - git-gui
      - git-lfs
      - gitk
      - lcov
      - make
      #- nemiver
      - netcat
      - rlwrap
      - socat
      - tcpdump
      - vagrant
      - valgrind
      - wget

- name: install user packages
  ansible.builtin.apt:
    state: present
    name:
      - autojump
      - brave-browser # google-chrome-stable
      - celluloid # parole
      - deja-dup # gtk3
      - font-manager
      - fzf
      - ghex
      - gimp # no install recommends?
      - gnome-disk-utility # gtk3 (gparted)
      - gnome-firmware # gtk3
      - gpicview # ristretto, eom
      - gtkterm
      - htop
      - keepassxc
      - libreoffice-calc
      - libreoffice-gtk3
      - libreoffice-help-en-us
      - libreoffice-impress
      - libreoffice-style-breeze
      - libreoffice-writer
      - libsdl-ttf2.0-0 # vbox
      - mate-calc # galculator
      - meld
      - mousepad # pluma
      - ncdu # baobab (gtk3), ducs
      - neofetch
      - pdfgrep
      - pipx
      - python3
      - python3-pip
      - python3-psutil # ansible dconf module
      - python3-setuptools
      - python3-venv
      #- qt5-default
      #- redshift-gtk
      #- remmina
      #- remmina-plugin-rdp
      #- audacious, lxmusic, lollypop, cmus, moc
      - stow
      - tmux
      - tree
      - usb-creator-gtk
      - vim
      - virtualbox-7.0
      - wireshark
      - xterm
      - zathura # atril, evince

- name: install vscode extensions
  become_user: '{{user}}'
  ansible.builtin.command: 'code --install-extension {{item}}'
  register: install_vscode_extension
  args:
    creates: '~/.vscode/extensions/{{item}}-*'
  loop:
    - ms-vscode.cpptools
    - ms-vscode.makefile-tools
    - ms-vscode.cmake-tools
    - ms-vscode-remote.remote-containers
    - ms-vscode.hexeditor
    - ms-python.python
    - ms-python.debugpy
    - ms-azuretools.vscode-docker
    - rust-lang.rust-analyzer
    - redhat.ansible
    - vscode-icons-team.vscode-icons

- name: install latest rust
  become_user: '{{user}}'
  ansible.builtin.shell:
    cmd: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
    creates: ~/.cargo/bin/rustc

- name: add user groups
  ansible.builtin.user:
    name: '{{user}}'
    append: true
    groups:
      - dialout
      - users
      - wireshark
      - docker

- name: install nerd fonts
  become_user: '{{user}}'
  vars:
    fonts_dir: ~/.local/share/fonts
  block:
    - name: create local fonts directory
      ansible.builtin.file:
        path: '{{fonts_dir}}'
        state: directory

    - name: install nerd fonts
      ansible.builtin.unarchive:
        src: https://github.com/ryanoasis/nerd-fonts/releases/latest/download/{{item.pkg}}.zip
        dest: '{{fonts_dir}}'
        include: '{{item.name}}*.ttf'
        creates: '{{fonts_dir}}/{{item.name}}*.ttf'
        remote_src: true
      loop: '{{nerd_fonts}}'
      loop_control:
        label: '{{item.name}}'

- name: config xdg directories
  become_user: '{{user}}'
  block:
    - name: remove xdg user dirs
      ansible.builtin.file:
        path: '~/{{item}}'
        state: absent
      loop:
        - Templates
        - Public
      register: xdg_user_dirs

    - name: update xdg user dirs
      ansible.builtin.command: xdg-user-dirs-update
      when: xdg_user_dirs.changed

- name: config bashrc
  become_user: '{{user}}'
  ansible.builtin.blockinfile:
    path: ~/.bashrc
    block: "{{lookup('ansible.builtin.file', 'files/home/bashrc')}}"
    insertafter: EOF

- name: config theme
  become_user: '{{user}}'
  block:
    - name: configure gtk2 theme
      ansible.builtin.copy:
        src: files/home/gtkrc-2.0
        dest: ~/.gtkrc-2.0

    - name: configure gtk3 theme
      ansible.builtin.copy:
        src: files/home/config/gtk-3.0
        dest: ~/.config

- name: dotfiles
  become_user: '{{user}}'
  block:
    - name: clone dotfiles repo
      ansible.builtin.git:
        repo: '{{dotfiles.repo}}'
        dest: '{{dotfiles.dest}}'
        key_file: '{{dotfiles.key | default(omit)}}'
        update: false
        force: false

    - name: install dotfile
      ansible.builtin.command:
        cmd: stow --dir={{dotfiles.dest}} --target=/home/{{user}} --verbose=2 {{item}}
      register: stow
      changed_when: "'LINK:' in stow.stderr"
      loop: '{{dotfiles.pkgs}}'
  tags: dotfiles

