---

- name: install dev tools
  ansible.builtin.apt:
    state: present
    name:
      - build-essential
      - cmake
      - cppcheck
      - curl
      - dos2unix
      - gdb-multiarch
      - git
      - git-completion
      - git-gui
      - git-lfs
      - gitk
      - lcov
      - make
      - netcat
      - patch
      - pipenv
      - pkg-config
      - python3-pip
      - python3-setuptools
      - python3-venv
      - python3-wheel
      - socat
      - vagrant
      - valgrind
      - wget

- name: install docker
  block:
    - name: install docker
      ansible.builtin.apt:
        state: present
        name:
          - docker.io
          - docker-buildx
          - docker-compose-v2
          - python3-docker

    - name: add {{user}} user to docker group
      user:
        name: '{{user}}'
        groups: docker
        append: true
  when: apps.docker | bool

- name: install latest rust
  become_user: '{{user}}'
  ansible.builtin.shell:
    cmd: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
    creates: ~/.cargo/bin/rustc
  when: dev.rust | bool

- name: install vscode
  block:
    - name: install vscode
      ansible.builtin.apt:
        state: present
        name:
          - code

    - name: install vscode extensions
      become_user: '{{user}}'
      ansible.builtin.command: 'code --install-extension {{item}}'
      register: install_vscode_extension
      args:
        creates: '~/.vscode/extensions/{{item}}-*'
      loop: '{{vscode_extensions}}'
  when: dev.vscode | bool

- name: install utils
  ansible.builtin.apt:
    state: present
    name:
      - autojump
      - bat
      - fzf
      - htop
      - neofetch
      - pdfgrep
      - pipx
      - playerctl
      - python3
      - ripgrep
      - rlwrap
      - stow
      - tasksh
      - taskwarrior
      - tcpdump
      - tmux
      - tree
      - vim
      - vit

- name: install graphical packages
  ansible.builtin.apt:
    state: present
    name:
      - celluloid # parole
      - deja-dup # gtk3
      - font-manager
      - ghex
      - gimp # no install recommends?
      - gnome-disk-utility # gtk3 (gparted)
      - gnome-firmware # gtk3
      - gpicview # ristretto, eom
      - gtkterm
      - keepassxc
      - maim # scrot, flameshot
      - mate-calc # galculator
      - meld
      - mousepad # pluma
      - ncdu # baobab (gtk3), ducs
      #- audacious, lxmusic, lollypop, cmus, moc
      - seahorse
      - sxiv
      - usb-creator-gtk
      - zathura # atril, evince

- name: install libreoffice
  ansible.builtin.apt:
    state: present
    name:
      - libreoffice-calc
      - libreoffice-gtk3
      - libreoffice-help-en-us
      - libreoffice-impress
      - libreoffice-style-breeze
      - libreoffice-writer
  when: apps.libreoffice | bool

- name: install wireshark
  block:
    - name: allow wireshark to run non-root # must be set prior to installing package
      ansible.builtin.debconf:
        name: wireshark-common
        question: wireshark-common/install-setuid
        value: 'true'
        vtype: select

    - name: install wireshark
      ansible.builtin.apt:
        state: present
        name:
          - wireshark

    - name: add user to wireshark group
      ansible.builtin.user:
        name: '{{user}}'
        append: true
        groups: wireshark
  when: apps.wireshark | bool

- name: install virtualbox
  block:
    - name: install virtualbox
      ansible.builtin.apt:
        state: present
        name:
          - libsdl-ttf2.0-0
          - virtualbox-7.0

    - name: add user to vboxsf group
      ansible.builtin.user:
        name: '{{user}}'
        append: true
        groups: vboxsf
  when:
    - ansible_facts['virtualization_role'] != "guest"
    - apps.virtualbox | bool

---

- name: install nerd fonts
  become_user: '{{user}}'
  vars:
    fonts_dir: ~/.local/share/fonts
  block:
    - name: create local fonts directory
      ansible.builtin.file:
        path: '{{fonts_dir}}/{{item.name}}'
        state: directory
      loop: '{{nerd_fonts}}'
      loop_control:
        label: '{{item.name}}'

    - name: install nerd fonts
      ansible.builtin.unarchive:
        src: https://github.com/ryanoasis/nerd-fonts/releases/latest/download/{{item.pkg}}.zip
        dest: '{{fonts_dir}}/{{item.name}}'
        creates: '{{fonts_dir}}/{{item.name}}/*.ttf'
        remote_src: true
      loop: '{{nerd_fonts}}'
      loop_control:
        label: '{{item.name}}'

- name: config xdg directories
  become_user: '{{user}}'
  block:
    - name: remove xdg user dirs
      ansible.builtin.file:
        path: '~/{{item}}'
        state: absent
      loop:
        - Templates
        - Public
      register: xdg_user_dirs

    - name: update xdg user dirs
      ansible.builtin.command: xdg-user-dirs-update
      when: xdg_user_dirs.changed

- name: copy bash aliases
  become_user: '{{user}}'
  ansible.builtin.copy:
    src: files/home/bash_aliases
    dest: ~/.bash_aliases

- name: dotfiles
  become_user: '{{user}}'
  block:
    - name: clone dotfiles repo
      ansible.builtin.git:
        repo: '{{dotfiles.repo}}'
        dest: '{{dotfiles.dest}}'
        key_file: '{{dotfiles.key | default(omit)}}'
        update: false
        force: false

    - name: install dotfile
      ansible.builtin.command:
        cmd: stow --dir={{dotfiles.dest}} --target=/home/{{user}} --verbose=2 {{item}}
      register: stow
      changed_when: "'LINK:' in stow.stderr"
      loop: '{{dotfiles.pkgs}}'
  tags: dotfiles

